name: Build and Release SimpleDoubleClickFix (C++)

on:
  push:
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Required to create releases and upload assets

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      # This action sets up the MSBuild environment, necessary for building .vcxproj files.
      # It will use the version of MSBuild included with Visual Studio on the runner.

    - name: Build C++ Project
      run: msbuild SimpleDoubleClickFix\SimpleDoubleClickFix.vcxproj /p:Configuration=Release /p:Platform=x64
      shell: pwsh # Using PowerShell, which is the default on windows-latest

    - name: Stage Binaries
      run: |
        mkdir staging
        Copy-Item -Path SimpleDoubleClickFix\x64\Release\SimpleDoubleClickFix.exe -Destination staging\
      shell: pwsh

    - name: Create ZIP Archive
      # This step packages the contents of the 'staging' directory into a zip file.
      # For this project, it will contain SimpleDoubleClickFix.exe.
      run: Compress-Archive -Path staging\* -DestinationPath SimpleDoubleClickFix.zip
      shell: pwsh

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }} # github.ref_name provides a cleaner tag name (e.g., v1.0.0)
        body: |
          Release notes for SimpleDoubleClickFix.

          Download the `SimpleDoubleClickFix.zip` file, extract it, and launch `SimpleDoubleClickFix.exe`.
          This will open a console window; the fix is active as long as this window remains open.
          The program prints active thresholds (e.g., for Left Mouse Button) to the console on startup.
          To stop the program, close the console window or press Ctrl+C in it.

          Windows only. This is a native C++ application and does not require a .NET runtime.
          It may require the Microsoft Visual C++ Redistributable for Visual Studio 2015-2022.
          If needed, you can usually download it from Microsoft's official website.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SimpleDoubleClickFix.zip # Path to the zip file created in the previous step
        asset_name: SimpleDoubleClickFix.zip # Name of the asset as it will appear in the GitHub Release
        asset_content_type: application/zip